name: Deploy to CPanel

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up PHP
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2' # Change to your desired PHP version
          extensions: mbstring, xml, zip, curl

      # Install git-ftp
      - name: Install git-ftp
        run: sudo apt-get install -y git-ftp

      # Check version tools used
      - name: Check versions
        run: |
          git --version
          php --version
          composer --version
          node --version
          npm --version

      # Copy .env.example to .env
      - name: Copy .env
        run: cp .env.example .env

      # Remove build folder
      - name: Clean build folders
        run: |
          rm -rf public/build
          rm -rf bootstrap/ssr

      # Install and build project
      - name: Install dependencies
        run: |
          composer install
          npm install
          npm run build

      # Set FTP credentials based on branch
      - name: Set FTP Credentials
        run: |
            echo "FTP_HOST=${{ secrets.FTP_SERVER }}" >> $GITHUB_ENV
            echo "FTP_USERNAME=${{ secrets.FTP_USERNAME }}" >> $GITHUB_ENV
            echo "FTP_PASSWORD=${{ secrets.FTP_PASSWORD }}" >> $GITHUB_ENV

      # Sync files using git-ftp
      - name: Deploy to FTP
        run: |
          if curl --silent --show-error --ftp-ssl -u $FTP_USERNAME:$FTP_PASSWORD -k ftp://$FTP_HOST/website/.git-ftp.log; then
            echo "file .git-ftp.log found, doing git-ftp push...";
            git-ftp push -u $FTP_USERNAME -p $FTP_PASSWORD -v $FTP_HOST/website/ --syncroot .;
          else
            echo "file .git-ftp.log not found, doing git-ftp init...";
            git-ftp init -u $FTP_USERNAME -p $FTP_PASSWORD -v $FTP_HOST/website/;
          fi
